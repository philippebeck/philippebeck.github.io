//! ********** BREAKPOINTS **********

$xs: 22.5rem;    //  360px => mobile portrait
$sm: 48rem;      //  768px => mobile landscape & tablet portrait
$md: 64rem;      // 1024px => tablet landscape
$lg: 85.375rem;  // 1366px => small laptop
$xl: 96rem;      // 1536px => medium laptop & small desktop
$wd: 120rem;     // 1920px => large laptop & desktop

$breakpoints: (
  "tn": 0,
  "xs": $xs,
  "sm": $sm,
  "md": $md,
  "lg": $lg,
  "xl": $xl,
  "wd": $wd
) !default;

//! ********** COLORS **********

$primary:   hsl(270, 100%, 80%);
$secondary: hsl(120, 100%, 80%);
$white:     hsl(  0,   0%, 95%);
$silver:    hsl(  0,   0%, 80%);
$gray:      hsl(  0,   0%, 20%);
$black:     hsl(  0,   0%,  5%);

//! ********** FONTS **********

@font-face {
  font-family: "Geologica";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src:
    local("Geologica-Regular"),
    url("/fonts/Geologica-Regular.woff2") format("woff2");
}

@font-face {
  font-family: "Trocchi";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src:
    local("Trocchi-Regular"),
    url("/fonts/Trocchi-Regular.woff2") format("woff2");
}

@font-face {
  font-family: "Ubuntu Mono";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src:
    local("UbuntuMono-Regular"),
    url("/fonts/UbuntuMono-Regular.woff2") format("woff2");
}

$sans-serif: Geo, Helvetica, sans-serif;
$serif: Trocchi, Times, serif;
$monospace: "Ubuntu Mono", Courier, monospace;

//! ********** TRANSFORM **********

$transforms: (
  "slide-right":  translateX(-100%),
  "slide-left":   translateX(100%),

  "turn-x":   rotateX(360deg),
  "turn-y":   rotateY(360deg),
  "turn-z":   rotateZ(360deg),
  "turn-xy":  rotate3d(1, 1, 0, 360deg),
  "turn-xz":  rotate3d(1, 0, 1, 360deg),
  "turn-yz":  rotate3d(0, 1, 1, 360deg),
  "turn-3d":  rotate3d(1, 1, 1, 360deg),

  "grow-min":   scale(0.7, 0.7),
  "grow-max":   scale(0, 0),
  "flip-x":     scale(1, -1),
  "flip-y":     scale(-1, 1),
) !default;

//! ********** KEYFRAMES **********

@mixin keyframes($key, $value) {
  @keyframes #{$key} {
    from {
      transform: #{$value};
    }
  }
}

@each $key, $value in $transforms {
  @include keyframes($key, $value);
}
